keploy:
  # Keploy configuration for API testing
  app:
    name: task-management-api
    port: 3000
    command: "npm run dev"
    env:
      - MONGODB_URI=mongodb://localhost:27017/task-management-test
      - NODE_ENV=test
  
  # Test configuration
  tests:
    # Test suite configuration
    suite:
      name: "Task API Tests"
      description: "Comprehensive tests for Task Management API endpoints"
    
    # Test cases
    cases:
      - name: "Get All Tasks"
        request:
          method: GET
          url: "/api/tasks"
          headers:
            Content-Type: application/json
        expected:
          status: 200
          body:
            type: array
    
      - name: "Create New Task"
        request:
          method: POST
          url: "/api/tasks"
          headers:
            Content-Type: application/json
          body:
            title: "Test Task for API Testing"
        expected:
          status: 201
          body:
            type: object
            properties:
              title:
                type: string
              completed:
                type: boolean
              _id:
                type: string
    
      - name: "Get Task by ID"
        request:
          method: GET
          url: "/api/tasks/{{task_id}}"
          headers:
            Content-Type: application/json
        expected:
          status: 200
          body:
            type: object
            properties:
              title:
                type: string
              completed:
                type: boolean
              _id:
                type: string
    
      - name: "Update Task"
        request:
          method: PUT
          url: "/api/tasks/{{task_id}}"
          headers:
            Content-Type: application/json
          body:
            title: "Updated Test Task"
            completed: true
        expected:
          status: 200
          body:
            type: object
            properties:
              title:
                type: string
              completed:
                type: boolean
              _id:
                type: string
    
      - name: "Delete Task"
        request:
          method: DELETE
          url: "/api/tasks/{{task_id}}"
          headers:
            Content-Type: application/json
        expected:
          status: 204
    
      - name: "Create Task with Invalid Data"
        request:
          method: POST
          url: "/api/tasks"
          headers:
            Content-Type: application/json
          body:
            title: ""
        expected:
          status: 400
          body:
            type: object
            properties:
              error:
                type: string
    
      - name: "Get Non-existent Task"
        request:
          method: GET
          url: "/api/tasks/507f1f77bcf86cd799439999"
          headers:
            Content-Type: application/json
        expected:
          status: 404
          body:
            type: object
            properties:
              error:
                type: string

  # Recording configuration
  record:
    # Enable recording of API calls
    enabled: true
    
    # Record all HTTP requests and responses
    http:
      enabled: true
    
    # Record database operations
    db:
      enabled: true
    
    # Record external API calls
    external:
      enabled: true

  # Test execution configuration
  test:
    # Enable test execution
    enabled: true
    
    # Test execution mode
    mode: "test"
    
    # Test timeout
    timeout: 30s
    
    # Test retry configuration
    retry:
      attempts: 3
      delay: 1s
    
    # Test report configuration
    report:
      format: "json"
      output: "./test-reports" 